
<script type="text/html" id="preference-template">
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Number</th>
                    <th>Title</th>
                    <th>Prerequisites
                        <a href="#" class="close pull-right" data-bind="click:Save" data-toggle="tooltip" data-placement="right" title="Save Preferences"><i class="fa fa-floppy-o"></i></a>

                    </th>

                </tr>
            </thead>
            <tbody>
                <tr>
                   
                    <td colspan="3">
                        <a href="#" class="close pull-right" data-bind="click: AddCourse" data-toggle="tooltip" data-placement="right" title="Add Course"><i class="fa fa-plus"></i></a>
                        <select class="form-control" data-bind="value: NewCourse, options: Records(), optionsText: function(item) { return item.Number + ' - ' + item.Name} , optionsValue: function(item) {return item.ID}, optionsCaption: 'Select Course'"></select>
                    </td>
                </tr>
            </tbody>
            <tbody data-bind="foreach: Courses()">
            
                <tr>
                    <td data-bind="text: Number"></td>
                    <td data-bind="text: Name"></td>
                    <td> <span data-bind="text: Prerequisites.map(function (obj) { return obj.Number }).join(', ')"></span><span class="pull-right text-success" data-bind="if: IsCompleted">completed</span> <a href="#" class="close pull-right" data-toggle="tooltip" data-placement="right" title="Remove Course" data-bind="if: !IsCompleted, click: $parent.RemoveCourse"  ><i class="fa fa-times"></i></a></td>
                </tr>
         
            </tbody>
        </table>
    </div>
</script>

<script type="text/javascript">

            function StudentPreferenceViewModel() {
                var self = this;

                self._records = ko.observableArray();

                self.Records = ko.computed(function () {
                    return self._records().sort(function (left, right) {
                        return (left.Number == right.Number) ? 0 : (left.Number < right.Number ? -1 : 1);
                    });
                });


                self.Query = function () {
                    self._records.removeAll();
                    $.getJSON("/Api/Courses", function (data) {
                        ko.utils.arrayForEach(data, function (item) {
                            self._records.push(item);

                        });
                    });
                }


                self.Save = function () {

                    $.ajax({
                        type: "POST",
                        url: "/Api/StudentPreference",
                        data: {
                            GaTechId : self.GaTechId(),
                            Courses: self.Courses(),
                            IsActive : true

                        },
                        success: function (data) {
                            alert("Preferences Successfully saved!");

                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error saving preferences. " +  XMLHttpRequest.responseJSON.Message);

                        },
                        complete: function (data) {
   
                        }
                    });
                };

             

                self.NewCourse = ko.observable('');

                self.AddCourse = function () {

                    if (self.NewCourse() !== undefined)
                    {
                        $.getJSON("/Api/Course/" + self.NewCourse(), function (data) {

                           var exists = ko.utils.arrayFirst(self._courses(), function (item) {
                                return data.ID === item.ID;
                            })

                            if (!exists) {
                                self._courses.push(data);
                            }
                           
                        });

                        self.NewCourse('');
                    }
                };

                self.RemoveCourse = function() {
                    self._courses.remove(this);
                };




                self.GaTechId = ko.observable('');

  
                self._courses = ko.observableArray();

                self.Courses = ko.computed(function () {
                    return self._courses().sort(function (left, right) {
                        return (left.Number == right.Number) ? 0 : (left.Number < right.Number ? -1 : 1);
                    });
                });

                self.IsPopulated = ko.computed(function () {
                    return self.GaTechId() !== '';
                });

                self.GaTechId.subscribe(function (newValue) {
                    self._courses.removeAll();

                    self.Query();

                        $.getJSON("/Api/StudentPreferences", { GaTechId: self.GaTechId() }, function (data) {
                            ko.utils.arrayForEach(data, function (item) {
                                self._courses.push(item);
                            });
                        });
                }, this);
            }

</script>
