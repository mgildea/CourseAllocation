@model CourseAllocation.Models.ApplicationUser
@{
    ViewBag.Title = Model.UserName;
}

<h2 class="underline">My Course Preferences</h2>


<button type="button" class="btn btn-primary pull-left" data-toggle="modal" data-target="#optimizeModal">
    Optimize
</button>


<!-- Modal -->
<div class="modal fade" id="optimizeModal" tabindex="-1" role="dialog" aria-labelledby="optimizeModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="optimizeModalLabel">Enter a name to help identify this run</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control" placeholder="Run Name" data-bind="value: RunName" />
            </div>
            <div class="modal-footer">
                <button type="button" data-bind="click: Optimize" class="btn btn-primary">Run Optimization</button>
            </div>
        </div>
    </div>
</div>

<ul class="nav nav-tabs" role="tablist">
    <li class="active pull-right"><a data-target="#preferences" data-toggle="tab">Preferences</a></li>
    <li class="pull-right"><a data-target="#results" data-toggle="tab">Results</a></li>

</ul>



<div class="tab-content">

    <div class="tab-pane fade in active" id="preferences">
        <div class="row">

            <div class="col-md-8 col-md-offset-2" data-bind="if: StudentPreferences.IsPopulated">
                <div data-bind="template: { name: 'preference-template', data: StudentPreferences }"></div>
            </div>

        </div>
    </div>

    <div class="tab-pane fade" id="results">

        <div class="row">
            <div class="col-md-4">
                <div class="row form-group">
                    <div class="col-md-12">
                        <select class="form-control" data-bind="value: Results.SelectedOptimization, options: Results.OptimizationRecords(), optionsText: function(item) { return item.Name } , optionsValue: function(item) { return item.ID }, optionsCaption: 'Select Optimization'"></select>
                    </div>
                </div>

                
            </div>
            <div class="col-md-8" data-bind="if: Results.SelectedOptimization()">

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th class="text-center">Semester</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Number</th>
                            <th class="text-center">Title</th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: Results.RecommendationRecords()">

                        <tr data-bind="css: { 'text-danger': !$data.IsAssigned && !$data.IsCompleted }">
                            <td class="text-center" data-bind="text: Type"></td>
                            <td class="text-center" data-bind="text: Year"></td>
                            <td class="text-center" data-bind="text: Number"></td>
                            <td><span data-bind="text: Name"></span><span class="pull-right text-success" data-bind="if: IsCompleted">completed</span></td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
        <p class="text-danger">* Optimization Results will vary as student preferences and course offerings evolve.</p>
    </div>

</div>


@Html.Partial("_StudentPreferences")

@Html.Partial("_Results")


<script type="text/javascript">


    function courseSemesterSort(left, right) {
        if (left.Year == right.Year) {
            if (left.TypeValue == right.TypeValue)
                return (left.Number == right.Number) ? 0 : (left.Number < right.Number ? -1 : 1);
            else
                return left.TypeValue == right.TypeValue ? 0 : (left.TypeValue < right.TypeValue ? -1 : 1);
        }
        else
            return left.Year == right.Year ? 0 : (left.Year < right.Year ? -1 : 1);
    }


    function ViewModel() {
        var self = this;

        self.StudentPreferences =  new StudentPreferenceViewModel();
        self.StudentPreferences.GaTechId('@Model.UserName');

        self.Results = new ResultsViewModel();
        self.Results.SelectedStudent('@Model.UserName');
        self.Results.Query();


        self.RunName = ko.observable('');

        self.Optimize = function () {
            SPIN();
            $('#optimizeModal').modal('hide');
            $.ajax({
                url: "/Api/Optimizer/" + self.RunName(),
                method: "POST",

                success: function (data) {
                    //alert("the optimization was succesfully run");
                    $('#admintabs a[href="#results"]').tab('show');
                    self.Results.Query();

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("An error occured during optimization");
                },
                complete: function (data) {
                    self.RunName('');
                    SPIN();
                }
            });
        }

        self.Results.SelectedOptimization.subscribe(function (newValue) {
            if (typeof newValue === 'undefined') {
                self.Results._recommendationRecords.removeAll();
            }
            else {
                $.getJSON("/Api/OptimizationStudentRecomendations/" + self.Results.SelectedOptimization() + "/" + self.Results.SelectedStudent(), function (data) {
                    self.Results._recommendationRecords.removeAll();

                    ko.utils.arrayForEach(data, function (item) {
                        self.Results._recommendationRecords.push(item);

                    });
                });

            }

        });
    }


    ko.applyBindings(ViewModel);

            $(function () {
                $('[data-toggle="tooltip"]').tooltip()
            });



</script>
